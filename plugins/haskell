#!/usr/bin/env sh

haskell_set_env() {
    if [ -d "$OME_REPO/stack" ]; then
        export PATH=$OME_REPO/stack:$PATH
    fi
}
haskell_set_env
if [ "$OME_OS" = "$OS_CYGWIN" ]; then
    # STACK_MAJOR_VERSION=1
    # STACK_MINOR_VERSION=9
    # STACK_PATCH_VERSION=1
    # STACK_VERSION=node-v${STACK_MAJOR_VERSION}.${STACK_MINOR_VERSION}.${STACK_PATCH_VERSION}-win-x64
    
    # STACK_VERSION=2.1.3

    # tip "set env:$OME_REPO/$STACK_VERSION"
    export PATH=$OME_REPO/stack:$PATH
fi

stack_install_download() {
    if [ "`command -v stack`" = "" ]; then
        # if [ "$OME_OS" = "$OS_CYGWIN" ]; then
        if [ "$OME_OS" = "$OS_CYGWIN" ] || [ "$OME_OS" = "$OS_MSYS2" ]; then
            local pkgver=stack-${STACK_VERSION}-windows-x86_64
            local zipkg=$pkgver.zip
            
            if [ ! -d $OME_REPO/$pkgver ]; then
                mkdir -p ~/Downloads
                cd ~/Downloads/
                
                if [ ! -f $HOME/Downloads/$zipkg ]; then
                    # wget https://nodejs.org/dist/latest-v${STACK_MAJOR_VERSION}.x/$zipkg
                    wget -c https://github.com/commercialhaskell/stack/releases/download/v${STACK_VERSION}/$zipkg
                fi
                
                # if [ ! -d $OME_REPO/$pkgver ]; then
                unzip ./$zipkg -d $OME_REPO/stack
                cd $OME_REPO/stack/
                chmod +x ./*
                haskell_set_env
                # fi
            fi
        elif [ "$OME_OS" = "$OS_ARCH" ]; then
            sudo pacman -S stack
        else
            curl -sSL https://get.haskellstack.org/ | sh
            # or
            # wget -qO- https://get.haskellstack.org/ | sh    
        fi
    fi
}

stack_install_bin() {
    # https://docs.haskellstack.org/en/stable/install_and_upgrade/#installupgrade
    get_os_type
    case $OME_OS in
        # Linux
        # $OS_DEBIAN) ;;
        # $OS_UBUNTU) ;;
        $OS_DEBIAN|$OS_UBUNTU) sudo apt install haskell-stack;;
        # $OS_REDHAT) ;;
        # $OS_FEDORA) ;;
        $OS_REDHAT|$OS_FEDORA)
            sudo dnf copr enable petersen/stack
            # sudo yum install stack
            ;;
        $OS_ARCH) sudo pacman -S statck;;
        $OS_GENTOO) ;;
        $OS_SUSE)
            # openSUSE Leap
            sudo zypper ar http://download.opensuse.org/repositories/devel:/languages:/haskell/openSUSE_Leap_42.1/devel:languages:haskell.repo
            # SUSE Linux Enterprise 12
            # sudo zypper ar http://download.opensuse.org/repositories/devel:/languages:/haskell/SLE_12/devel:languages:haskell.repo
            sudo zypper in stack
            ;;
        $OS_SLACKWARE) ;;
        $OS_NIXOS) ;;
        $OS_VOID) ;;
        $OS_ALPINE) ;;
        $OS_MAGEIA) ;;
        $OS_SLITAZ) ;;
        $OS_GUIXSD) ;;
        # Unix
        $OS_MACOS) ;;
        $OS_AIX) ;;
        $OS_SOLARIS) ;;
        $OS_FREEBSD) ;;
        $OS_OPENBSD) ;;
        $OS_NETBSD) ;;
        $OS_DFBSD) ;;
        # Windows
        $OS_CYGWIN) ;;
        $OS_MSYS2) ;;
        # Other
        $OS_UNKNOW) ;;
    esac

}

install_haskell_language_server() {
    # https://github.com/haskell/haskell-ide-engine#installation
    github_upgrade haskell/haskell-ide-engine $OME_REPO/haskell-ide-engine
    cd $OME_REPO/haskell-ide-engine/

    stack ./install.hs help
    # make build-all
}

haskell_install()
{
    stack_install_download
    # stack_install_bin

    tip "stack setup"
    stack setup
    
    tip "stack upgrade"
    stack upgrade

    # tip "install cabal"
    # stack install cabal-install
    # cabal update

    tip "install haskell language server"
    install_haskell_language_server
}

haskell_uninstall() {
    echo_error "'haskell_uninstall' not implemented"
}

haskell_exist_p() {
    echo_error "'haskell_exist_p' not implemented"
}

haskell_info() {
    if [ "`command -v stack`" != "" ]; then
        ome_show "Haskell" "stack `stack --version 2>&1 | head -n 1 | cut -d ' ' -f 1-3`"
    fi
}
