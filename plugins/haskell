#!/usr/bin/env sh

if [ "$OME_OS" = "$OS_CYGWIN" ]; then
    # STACK_MAJOR_VERSION=1
    # STACK_MINOR_VERSION=9
    # STACK_PATCH_VERSION=1
    # STACK_VERSION=node-v${STACK_MAJOR_VERSION}.${STACK_MINOR_VERSION}.${STACK_PATCH_VERSION}-win-x64
    
    STACK_VERSION=1.9.1

    # tip "set env:$OME_CACHE/$STACK_VERSION"
    export PATH=$OME_CACHE/stack:$PATH
fi

haskell_install() {
    if [ "`command -v stack`" = "" ]; then
        if [ "$OME_OS" = "$OS_CYGWIN" ]; then
            local pkgver=stack-${STACK_VERSION}-windows-x86_64
            local zipkg=$pkgver.zip
            
            if [ ! -d $OME_CACHE/$pkgver ]; then
                mkdir -p ~/Downloads
                cd ~/Downloads/
                
                if [ ! -f $HOME/Downloads/$zipkg ]; then
                    # wget https://nodejs.org/dist/latest-v${STACK_MAJOR_VERSION}.x/$zipkg
                    wget -c https://github.com/commercialhaskell/stack/releases/download/v${STACK_VERSION}/$zipkg
                fi
                
                # if [ ! -d $OME_CACHE/$pkgver ]; then
                unzip ./$zipkg -d $OME_CACHE/stack
                cd $OME_CACHE/stack/
                chmod +x ./*
                # fi
            fi
        else
            # if test stack = "" ; then
            curl -sSL https://get.haskellstack.org/ | sh
            # or
            # wget -qO- https://get.haskellstack.org/ | sh    
        fi
    fi

    tip "stack upgrade"
    stack upgrade

}

haskell_uninstall() {
    echo_error "'haskell_uninstall' not implemented"
}

haskell_exist_p() {
    echo_error "'haskell_exist_p' not implemented"
}

haskell_info() {
    if [ "`command -v stack`" != "" ]; then
        ome_info "Haskell" "Stack `stack --version | cut -c 9-13`"
    fi
}
