#!/usr/bin/env sh

python_install_pyenv() {
  tip "install pyenv"
  github_upgrade pyenv/pyenv $HOME/.pyenv

  tip "pyenv_setenv"
  pyenv_setenv

  tip "install python"
  pyenv install $PYTHON3_VERSION
  pyenv global $PYTHON3_VERSION

  tip "pyenv whence rackup"
  pyenv whence rackup

  # use $HOME/.local pip
  ome_dev_path $HOME/.local
}

python_install_bin() {
  #deps
  get_os_type
  case $OME_OS in
    # Linux
    # $OS_DEBIAN) ;;
    # $OS_UBUNTU) ;;
    $OS_DEBIAN|$OS_UBUNTU)
      sudo apt install python3 python3-distutils python3-dev # python3-pip
      ;;
    # $OS_REDHAT) ;;
    # $OS_FEDORA) ;;
    $OS_REDHAT|$OS_FEDORA)
      sudo yum install -y python3 python3-devel;;
    $OS_ARCH)
      sudo pacman -S python3
      ;;
    $OS_GENTOO)
      emerge python3
      ;;
    $OS_SUSE) ;;
    $OS_SLACKWARE) ;;
    $OS_NIXOS) ;;
    $OS_VOID) ;;
    $OS_ALPINE) ;;
    $OS_MAGEIA) ;;
    $OS_SLITAZ) ;;
    $OS_GUIXSD) ;;
    # Unix
    $OS_MACOS)
      brew install python3
      ;;
    $OS_AIX) ;;
    $OS_SOLARIS) ;;
    $OS_FREEBSD)
      sudo pkg install python38
      ;;
    $OS_OPENBSD)
      sudo pkg install python38
      ;;
    $OS_NETBSD) ;;
    $OS_DFBSD) ;;
    # Windows
    $OS_CYGWIN)
      apt install python3
      ;;
    $OS_MSYS2)
      pacman -S mingw-w64-x86_64-python mingw-w64-x86_64-python-pip
      ;;
    # Other
    $OS_UNKNOW) ;;
  esac
}

python_install() {
  local oldir=`pwd`

  python_install_bin
  # python_install_pyenv

  tip "set pip mirror"
  if [ ! -f $HOME/.pip/pip.conf ]; then
    mkdir -p $HOME/.pip/
    echo "[global]" >> $HOME/.pip/pip.conf
    echo "index-url = http://mirrors.aliyun.com/pypi/simple/" >> $HOME/.pip/pip.conf
    echo "" >> $HOME/.pip/pip.conf
    echo "[install]" >> $HOME/.pip/pip.conf
    echo "trusted-host=mirrors.aliyun.com" >> $HOME/.pip/pip.conf
    # echo "install-option=--prefix=~/.local" >> $HOME/.pip/pip.conf
  fi

  if [ "$OME_OS" = "$OS_MSYS2" ] && [ ! -f "$USERPROFILE/pip/pip.ini" ]; then
    # export PATH="$USERPROFILE/.local/bin:$PATH"
    mkdir -p $USERPROFILE/pip/
    echo "[global]" >> $USERPROFILE/pip/pip.ini
    echo "index-url = http://mirrors.aliyun.com/pypi/simple/" >> $USERPROFILE/pip/pip.ini
    echo "" >> $USERPROFILE/pip/pip.ini
    echo "[install]" >> $USERPROFILE/pip/pip.ini
    echo "trusted-host=mirrors.aliyun.com" >> $USERPROFILE/pip/pip.ini
    # echo "install-option=--prefix=`cygpath -m ~/.local`" >> $USERPROFILE/pip/pip.ini
  fi

  # if ! command -v pip3 >/dev/null 2>&1; then
  if [ "`command -v pip3`" = "" ]; then
    tip "install pip3"
    cd $HOME/Downloads/
    if [ ! -f get-pip.py ]; then
      curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    fi
    # python3 get-pip.py --user
    # curl https://bootstrap.pypa.io/get-pip.py | python3
    #11 python3 get-pip.py --prefix=$OME_PREFIX
  else
    # pip3 install --prefix $OME_PREFIX --user -U pip
    #11 pip3 install --prefix $OME_PREFIX --upgrade pip -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
    echo ""
  fi

  tip "check pip3"
  which pip3
  pip3 --version

  # tip "pip3 version"
  # pip3 --version

  tip "install setuptools"
  # pip3 install --prefix=$OME_PREFIX -U sqlalchemy -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
  pip3 install --prefix $OME_PREFIX -U setuptools

  tip "install virtualenv"
  pip3 install --prefix $OME_PREFIX -U virtualenv

  tip "install pipenv"
  pip3 install --prefix $OME_PREFIX -U pipenv

  tip "install poetry"
  pip3 install --prefix $OME_PREFIX poetry

  tip "install hatch"
  pip3 install --prefix $OME_PREFIX hatch

  tip "install python language server"
  # pip3 install --prefix $OME_PREFIX -U python-language-server
  pip3 install --prefix $OME_PREFIX -U 'python-language-server[all]'

  tip "install build tools:gyp"
  github_upgrade chromium/gyp $OME_REPO/gyp
  cd $OME_REPO/gyp/
  pip3 install --prefix $OME_PREFIX -U .

  tip "install build tools:waf"
  git_upgrade "https://gitlab.com" ita1024/waf $OME_REPO/waf
  cd $OME_REPO/waf/
  python3 ./waf-light configure build
  cp -rf ./waf $OME_PREFIX/bin/

  # tip "install build tools:scons"
  # git_upgrade "https://github.com" SCons/scons $OME_REPO/scons
  # cd $OME_REPO/scons/
  # python3 bootstrap.py build/scons
  # if [ -d $OME_REPO/scons/build/scons/ ]; then
  # cd $OME_REPO/scons/build/scons/
  # pip3 install --prefix $OME_PREFIX -U .
  # else
  # echo_error "gen scons failed!"
  # fi

  tip "install OutputCheck tool"
  pip3 install --prefix $OME_PREFIX -U OutputCheck

  # pip install ipython jupyter rope jedi flake8 importmagic autopep8 yapf
  tip "install ebook build tool"
  pip3 install --prefix $OME_PREFIX -U jinja2
  pip3 install --prefix $OME_PREFIX -U markupsafe
  pip3 install --prefix $OME_PREFIX -U pygments
  pip3 install --prefix $OME_PREFIX -U sphinx
  pip3 install --prefix $OME_PREFIX -U docutils
  # pip3 install --prefix $OME_PREFIX -U wsgiref

  tip "install McCabe complexity checker"
  pip3 install --prefix $OME_PREFIX -U mccabe
  cd $oldir
}

python_uninstall() {
  sudo python3 -m pip uninstall -y pip setuptools
}

python_exist_p() {
  echo_error "'python_exist_p' not implemented"
}

python_info() {
  if [ "`command -v python2`" != "" ]; then
    PY2VER="`python2 --version 2>&1 | cut -c 8-`"
  else
    PY2VER="!miss!"
  fi

  if [ "`command -v python3`" != "" ]; then
    PY3VER="`python3 --version | cut -c 8-`"
  else
    PY3VER="!miss!"
  fi
  if [ "`command -v python2`" != "" ] || [ "`command -v python3`" != "" ]; then
    ome_show "Python" "py2:$PY2VER | py3:$PY3VER"
  fi
}

# PYTHON2_VERSION=2.7.17
# PYTHON3_VERSION=3.8.1
pyenv_setenv() {
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"

  # if [ "$OME_OS" = "$OS_MSYS2" ]; then
  # export PATH="$USERPROFILE/.local/bin:$PATH"
  # fi
  if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
  fi
  # export PYTHON_BUILD_MIRROR_URL="http://mirrors.sohu.com/python/2.7.12/"
}
# pyenv_setenv
