#!/usr/bin/env sh

clj_install() {
    # ome_check_install "java" "jvm"

    # https://www.clojure.org/guides/getting_started
    # https://clojure.org/guides/deps_and_cli
    tip "install clojure cli"
    mkdir -p $OME_PREFIX/clojure/libexec/
    if [ -f $HOME/Downloads/clojure-tools-${CLOJURE_VERSION}.tar.gz ]; then
        # echo "clojure use cache:"
        cp -f $HOME/Downloads/clojure-tools-${CLOJURE_VERSION}.tar.gz $OME_PREFIX/clojure/libexec/
    fi
    if [ "`command -v clojure`" = "" ] && [ -f $OME_PREFIX/clojure/libexec/clojure-tools-${CLOJURE_VERSION}.tar.gz ]; then
        cd $HOME/Downloads/
        CLI_FILE=linux-install-${CLOJURE_VERSION}.sh
        zipkg=clojure-tools-${CLOJURE_VERSION}.tar.gz
        if [ ! -f "$HOME/Downloads/$CLI_FILE" ]; then
            # rm -rf ./$CLI_FILE
            curl -O https://download.clojure.org/install/$CLI_FILE
            replace_str "curl -O" "# curl -O" $HOME/Downloads/$CLI_FILE "0"
            replace_str "rm -rf clojure-tools-" "# rm -rf clojure-tools-" $HOME/Downloads/$CLI_FILE "0"
        fi

        chmod +x ./$CLI_FILE
        mkdir -p $OME_PREFIX/lib/clojure/libexec/
        ./$CLI_FILE --prefix $OME_PREFIX
    else
        echo_kv "clojure" "${CLOJURE_VERSION}"
    fi

    tip "install leiningen"
    if [ -f $HOME/Downloads/leiningen-${LEIN_VERSION}-standalone.jar ]; then
        # echo "leiningen use cache:"
        mkdir -p $HOME/.lein/self-installs/
        cp -f $HOME/Downloads/leiningen-${LEIN_VERSION}-standalone.jar $HOME/.lein/self-installs/

        if [ "$OME_OS" = "$OS_CYGWIN" ] || [ "$OME_OS" = "$OS_MSYS2" ]; then
            mkdir -p $USERPROFILE/.lein/self-installs/
            cp -f $HOME/Downloads/leiningen-${LEIN_VERSION}-standalone.jar $USERPROFILE/.lein/self-installs/
        fi
    fi

    if [ "`command -v lein`" = "" ] || [ ! "`lein --version | cut -d ' ' -f 2`" = "$LEIN_VERSION" ]; then
        tip "install leiningen"
        cd $OME_PREFIX/bin/
        rm -rf ./lein
        wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
        if [ "$OME_OS" = "$OS_CYGWIN" ] || [ "$OME_OS" = "$OS_MSYS2" ]; then
            wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein.bat
        fi
        chmod +x ./lein
        lein --version
    else
        echo_kv "clojure" "`lein --version`"
        # lein upgrade
    fi

    readp "lein: use china morrir?"
    if [ $? -eq 1 ]; then
        cp -f $OME_ROOT/conf/lein/profiles.clj $HOME/.lein
    fi

    # tip "install boot"
    # if [ "`command -v boot`" = "" ]; then
    #     tip "install boot"
    #     # sudo bash -c "cd /usr/local/bin && curl -fsSLo boot https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh && chmod 755 boot"
    #     cd $OME_PREFIX/bin/
    #     curl -fsSLo boot https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh
    #     chmod +x ./boot
    #     boot --version
    # fi
}

clj_uninstall() {
    echo_error "'clj_uninstall' not implemented"
}

clj_exist_p() {
    echo_error "'clj_exist_p' not implemented"
}

clj_info() {
    if [ "`command -v java`" != "" ]; then
        ome_show "CLJ" "`ome_fetch_version lein | cut -d ' ' -f 1-2`"
    else
        echo_error ""
    fi
}

clj_publish_settings() {
    if [ ! -f $HOME/.lein/init.clj ]; then
        read -p "please input your username with clojas:" username
	    read -sp "please input your password with clojas:" password
        echo ""
        echo '(def settings' >> $HOME/.lein/init.clj
        echo '{:deploy-repositories {"clojars-https" {:url "https://clojars.org/repo"' >> $HOME/.lein/init.clj
        echo "                                         :username $username" >> $HOME/.lein/init.clj
        echo "                                         :password $password}}})" >> $HOME/.lein/init.clj
    fi
}
